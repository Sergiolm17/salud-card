{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","validator","setValidator","className","Box","direction","border","color","size","pad","method","action","encType","FormField","name","htmlFor","label","FileInput","messages","browse","dropPrompt","dropPromptMultiple","files","remove","removeAll","id","onChange","event","file","target","console","log","includes","gap","alignContent","alignSelf","Button","type","disabled","primary","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gPA+DeA,MA3Df,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACJC,EADI,KACOC,EADP,KAEX,OACI,qBAAKC,UAAU,MAAf,SACI,wBAAQA,UAAU,aAAlB,SACI,cAACC,EAAA,EAAD,CACIC,UAAU,MACVC,OAAQ,CAAEC,MAAO,QAASC,KAAM,SAChCC,IAAI,SAHR,SAKI,uBACIC,OAAO,OACPC,OAAO,IACPC,QAAQ,sBAHZ,UAKI,cAACC,EAAA,EAAD,CACIC,KAAK,eACLC,QAAQ,gBACRC,MAAM,gBAHV,SAKI,cAACC,EAAA,EAAD,CACIC,SAAU,CACNC,OAAQ,YACRC,WAAY,8BACZC,mBAAoB,UACpBC,MAAO,UACPC,OAAQ,UACRC,UAAW,WAEfC,GAAG,gBACHX,KAAK,eACLY,SAAU,SAACC,GACP,IACMC,EADWD,EAAME,OAAOP,MACR,GAAGR,KACzBgB,QAAQC,IAAIH,EAAKI,SAAS,SAC1B9B,EAAa0B,EAAKI,SAAS,cAIvC,cAAC5B,EAAA,EAAD,CACIC,UAAU,MACV4B,IAAI,SACJC,aAAa,SACbC,UAAU,SAJd,SAMI,cAACC,EAAA,EAAD,CACIC,KAAK,SACLC,UAAWrC,EACXsC,SAAO,EACPvB,MAAM,uBCzCvBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b81b282e.chunk.js","sourcesContent":["import \"./App.css\";\nimport { Box, FileInput, Form, FormField, Button } from \"grommet\";\nimport { useState } from \"react\";\n\nfunction App() {\n    const [validator, setValidator] = useState(false);\n    return (\n        <div className=\"App\">\n            <header className=\"App-header\">\n                <Box\n                    direction=\"row\"\n                    border={{ color: \"brand\", size: \"large\" }}\n                    pad=\"medium\"\n                >\n                    <form\n                        method=\"post\"\n                        action=\"/\"\n                        encType=\"multipart/form-data\"\n                    >\n                        <FormField\n                            name=\"fileUploaded\"\n                            htmlFor=\"file-input-id\"\n                            label=\"Subir archivo\"\n                        >\n                            <FileInput\n                                messages={{\n                                    browse: \"o navegue\",\n                                    dropPrompt: \"Coloque el archivo aquÃ­ \",\n                                    dropPromptMultiple: \"string3\",\n                                    files: \"string4\",\n                                    remove: \"string5\",\n                                    removeAll: \"string6\",\n                                }}\n                                id=\"file-input-id\"\n                                name=\"fileUploaded\"\n                                onChange={(event) => {\n                                    const fileList = event.target.files;\n                                    const file = fileList[0].name;\n                                    console.log(file.includes(\"xlsx\"));\n                                    setValidator(file.includes(\"xlsx\"));\n                                }}\n                            />\n                        </FormField>\n                        <Box\n                            direction=\"row\"\n                            gap=\"medium\"\n                            alignContent=\"center\"\n                            alignSelf=\"center\"\n                        >\n                            <Button\n                                type=\"submit\"\n                                disabled={!validator}\n                                primary\n                                label=\"Enviar\"\n                            />\n                        </Box>\n                    </form>\n                </Box>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}